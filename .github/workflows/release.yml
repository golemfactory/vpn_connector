name: Release

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.build-on }}
    strategy:
      matrix:
        include:
          - cpu: x86_64
            os: linux
            target: x86_64-unknown-linux-musl
            build-on: ubuntu-latest
            use-cross: false
            install-musl: true
            exe: ""
            run-tests: true
          - cpu: aarch64
            os: linux
            target: aarch64-unknown-linux-musl
            build-on: ubuntu-latest
            use-cross: true
            install-musl: false
            exe: ""
            run-tests: false
          - cpu: aarch64
            os: macOS
            target: aarch64-apple-darwin
            build-on: macos-latest
            use-cross: true
            install-musl: false
            exe: ""
            run-tests: false
          - cpu: x86_64
            os: macOS
            target: x86_64-apple-darwin
            build-on: macos-latest
            use-cross: false
            install-musl: false
            exe: ""
            run-tests: true

    name: Build profile release-lto ${{ matrix.cpu }} ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install musl-tools if needed
        if: ${{ matrix.install-musl }}
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Install Rust stable toolchain ${{ matrix.target }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Run tests
        if: ${{ matrix.run-tests }}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --profile release-lto --target ${{ matrix.target }} -- --nocapture

      - name: Build binary target/${{ matrix.target }}/release/ya-vpn-connector
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: build
          args: --profile release-lto --target ${{ matrix.target }}

      - name: Gz asset
        run: |
          set -ex
          tar -cf - -C target/${{ matrix.target }}/release-lto/ ya-vpn-connector${{ matrix.exe }} | gzip -9 > ya-vpn-connector.tar.gz
          tar -cf - -C target/${{ matrix.target }}/release-lto/ ya-vpn-connector${{ matrix.exe }} | xz -9 > ya-vpn-connector.tar.xz

      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ya-vpn-connector.tar.gz
          asset_name: ya-vpn-connector-${{ matrix.os }}-${{ matrix.cpu }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true
          body: "Gzipped binary for ${{ matrix.cpu }} ${{ matrix.os }}"

      - name: Upload
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ya-vpn-connector.tar.xz
          asset_name: ya-vpn-connector-${{ matrix.os }}-${{ matrix.cpu }}.tar.xz
          tag: ${{ github.ref }}
          overwrite: true
          body: "Gzipped binary for ${{ matrix.cpu }} ${{ matrix.os }}"